{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Header.js","components/Footer.js","ava.jpg","Tabs.js","App.js","index.js"],"names":["Todo","memo","props","todo","markCompleted","getEditTodo","todoEditingId","editTodo","index","removeTodo","isEditing","id","useState","text","setText","onEditTodo","className","isCompleted","value","onChange","e","target","onBlur","onKeyPress","key","type","checked","onDoubleClick","onClick","TodoList","listTodos","checkAll","isCheckedAll","console","log","htmlFor","map","Header","addTodo","placeholder","event","Date","valueOf","Footer","setStatusFilter","activeButton","clearCompleted","numOfTodosLeft","numOfTodos","href","Tabs","toggleState","setToggleState","toggleTab","filterByStatus","status","filter","item","filterTodosLeft","App","state","addTodos","setState","preState","updatedListTodos","splice","prevState","this","length","PureComponent","src","Avatar","style","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77af1d99.chunk.js","sourcesContent":["import React, { memo, useState } from 'react'\n\nconst Todo = memo(props => {\n    const {\n        todo,\n        markCompleted,\n        getEditTodo,\n        todoEditingId,\n        editTodo,\n        index,\n        removeTodo\n    } = props\n    const isEditing = todoEditingId === todo.id\n    const [text, setText] = useState(todo.text)\n    const onEditTodo = () => {\n        editTodo({\n            ...todo,\n            text\n        }, index)\n        getEditTodo('')\n    }\n\n    return (\n        <li className={`${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`}>\n            {\n                !isEditing ?\n                    <div className=\"view\">\n                        <input\n                            className=\"toggle\"\n                            type=\"checkbox\"\n                            checked={todo.isCompleted}\n                            onChange={() => markCompleted(todo.id)}\n                        />\n                        <label onDoubleClick={() => getEditTodo(todo.id)}>{todo.text}</label>\n                        <button className=\"destroy\" onClick={() => removeTodo(todo.id)} />\n                    </div> :\n                    <input\n                        className=\"edit\"\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}\n                        onBlur={onEditTodo}\n                        onKeyPress={(e) => {\n                            if (e.key === 'Enter' && text) {\n                                onEditTodo()\n                            }\n                        }}\n                    />\n            }\n        </li>\n    )\n})\n\nexport default Todo","import React, { memo } from 'react'\nimport Todo from './Todo'\n\nconst TodoList = memo(props => {\n    const { listTodos, checkAll, isCheckedAll } = props\n    return (\n        <section className=\"main\">\n            <input\n                className=\"toggle-all\"\n                type=\"checkbox\"\n                onChange={() => {\n                    console.log('mmark done')\n                    checkAll()\n                }}\n                checked={isCheckedAll}\n            />\n            <label htmlFor=\"toggle-all\" onClick={checkAll} ></label>\n            <ul className=\"todo-list\">\n                {\n                    listTodos.map((todo, index) => <Todo index={index} key={todo.id} todo={todo} {...props} />)\n                }\n            </ul>\n\n        </section>\n    )\n})\n\nexport default TodoList","import React, { memo, useState } from 'react'\n\nconst Header = memo((props) => {\n    const [text, setText] = useState('')\n    const { addTodo } = props\n\n    const onAddTodo = (event) => {\n        if (event.key === 'Enter' && text) {\n            addTodo({\n                id: new Date().valueOf(),\n                text,\n                isCompleted: false\n            })\n            setText('')\n        }\n    }\n\n    return (\n        <header className=\"header\">\n            <h1>todos</h1>\n            <input\n                className=\"new-todo\"\n                placeholder=\"What needs to be done?\"\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                onKeyPress={onAddTodo}\n            />\n        </header>\n    )\n})\n\nexport default Header","import React, { memo } from 'react'\n\nconst Footer = memo((props) => {\n    const { setStatusFilter, activeButton, clearCompleted, numOfTodosLeft, numOfTodos } = props\n    return (\n        <footer className=\"footer\">\n            <span className=\"todo-count\">\n                <strong>{numOfTodosLeft}</strong>\n                <span> </span>\n                <span>{numOfTodosLeft > 1 ? 'items' : 'item'}</span>\n                <span> left</span>\n            </span>\n            <ul className=\"filters\">\n                <li>\n                    <a\n                        href=\"#/\"\n                        className={`${activeButton === 'ALL' ? \"selected\" : ''}`}\n                        onClick={() => setStatusFilter('ALL')}\n                    >\n                        All\n                    </a>\n                </li>\n                <span></span>\n                <li>\n                    <a\n                        href=\"#/active\"\n                        className={`${activeButton === 'ACTIVE' ? \"selected\" : ''}`}\n                        onClick={() => setStatusFilter('ACTIVE')}\n                    >\n                        Active\n                    </a>\n                </li>\n                <span></span>\n                <li>\n                    <a\n                        href=\"#/completed\"\n                        className={`${activeButton === 'COMPLETED' ? \"selected\" : ''}`}\n                        onClick={() => setStatusFilter('COMPLETED')}\n                    >\n                        Completed\n                    </a>\n                </li>\n            </ul>\n            {\n                numOfTodosLeft < numOfTodos && <button className=\"clear-completed\" onClick={clearCompleted}>Clear completed</button>\n            }\n        </footer>\n    )\n})\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/ava.dc133468.jpg\";","import React, { PureComponent } from 'react';\nimport TodoList from './components/TodoList'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Avatar from './ava.jpg'\n\n\nimport { useState } from \"react\";\nimport './App.css'\nimport './css/Todo.css'\n\n\nfunction Tabs() {\n  const [toggleState, setToggleState] = useState(1);\n\n  const toggleTab = (index) => {\n    setToggleState(index);\n  };\n\n  const filterByStatus = (listTodos = [], status = '', id) => {\n    switch (status) {\n      case 'ACTIVE':\n        return listTodos.filter(item => !item.isCompleted)\n      case 'COMPLETED':\n        return listTodos.filter(item => item.isCompleted)\n      case 'REMOVE':\n        return listTodos.filter(item => item.id !== id)\n      default:\n        return listTodos\n    }\n  }\n\n  \n\n  const filterTodosLeft = (listTodos = []) => {\n    return listTodos.filter(item => !item.isCompleted)\n  }\n\n  class App extends PureComponent {\n\n\n    state = {\n      listTodos: [],\n      isCheckedAll: false,\n      status: 'ALL',\n      todoEditingId: ''\n    }\n  \n    addTodos = (todo = {}) => {\n      this.setState(preState => ({\n        listTodos: [...preState.listTodos, todo]\n      }))\n    }\n  \n    markCompleted = (id = '') => {\n      const { listTodos } = this.state\n      let isCheckedAll = true\n      const updatedListTodos = listTodos.map(item => {\n        if ((!item.isCompleted && item.id !== id) || (item.isCompleted && item.id === id)) {\n          isCheckedAll = false\n        }\n        if (item.id === id) {\n          return { ...item, isCompleted: !item.isCompleted }\n        }\n        return item\n      })\n      this.setState({\n        isCheckedAll,\n        listTodos: updatedListTodos\n      })\n    }\n  \n    checkAll = () => {\n      const { listTodos, isCheckedAll } = this.state\n      const updatedListTodos = listTodos.map(item => ({ ...item, isCompleted: !isCheckedAll }))\n      this.setState(preState => ({\n        isCheckedAll: !preState.isCheckedAll,\n        listTodos: updatedListTodos\n      }))\n    }\n  \n    clearCompleted = () => {\n      this.setState(preState => ({\n        listTodos: filterTodosLeft(preState.listTodos)\n      }))\n    }\n  \n    getEditTodo = (id = '') => {\n      this.setState({\n        todoEditingId: id\n      })\n    }\n  \n    editTodo = (todo, index) => {\n      const { listTodos } = this.state\n      listTodos.splice(index, 1, todo)\n      this.setState({ listTodos })\n    }\n  \n    removeTodo = (id = '') => {\n      this.setState(prevState => ({\n        listTodos: filterByStatus(prevState.listTodos, 'REMOVE', id)\n      }))\n    }\n  \n    render() {\n      const { listTodos, isCheckedAll, status, todoEditingId } = this.state\n      return (\n  \n        \n  \n        <div className=\"todoapp\">\n          <Header\n            addTodo={this.addTodos}\n          />\n          <TodoList\n            listTodos={filterByStatus(listTodos, status)}\n            markCompleted={this.markCompleted}\n            checkAll={this.checkAll}\n            isCheckedAll={isCheckedAll}\n            todoEditingId={todoEditingId}\n            getEditTodo={this.getEditTodo}\n            editTodo={this.editTodo}\n            removeTodo={this.removeTodo}\n          />\n          <Footer\n            activeButton={status}\n            setStatusFilter={(status) => this.setState({ status })}\n            clearCompleted={this.clearCompleted}\n            numOfTodosLeft={filterTodosLeft(listTodos).length}\n            numOfTodos={listTodos.length}\n          />\n        </div>\n      );\n  \n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"bloc-tabs\">\n        <button\n          className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n          onClick={() => toggleTab(1)}\n        >\n          Information\n        </button>\n        <button\n          className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n          onClick={() => toggleTab(2)}\n        >\n          Todos List\n        </button>\n        \n      </div>\n\n      <div className=\"content-tabs\">\n        <div\n          className={toggleState === 1 ? \"content  active-content\" : \"content\"}\n        >\n          <h1>Information</h1>\n          <hr />\n          <br></br>\n\n          <img src={Avatar}  style={{ width: '200px', } } ></img>\n          <br></br>\n          <br></br>\n          <h2>Họ và Tên: Nguyễn Đức Nhật</h2>\n          <h2>MSSV: 46.01.104.127</h2>\n          <h2>Email: 4601104127@student.hcmue.edu.vn</h2>\n          <h2>Địa chỉ: Quận Bình Thạnh</h2>\n        </div>\n\n        <div\n          className={toggleState === 2 ? \"content  active-content\" : \"content\"}\n        >\n          \n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n\n            <App></App>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default Tabs;\n","import \"./App.css\";\nimport Tabs from './Tabs';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Tabs />\n    </div>\n  );\n}\n    \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}